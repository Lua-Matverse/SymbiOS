#!/usr/bin/env bash
# scripts/verification/verify-deployment.sh
#
# Validates a MatVerse deployment running in Kubernetes.

set -euo pipefail

ENVIRONMENT=${1:-staging}

log() {
  local emoji="$1"
  shift
  printf '%s %s\n' "$emoji" "$*"
}

log "üîç" "Verificando deploy no ambiente $ENVIRONMENT..."
printf '============================================%s\n' ""

if ! command -v kubectl >/dev/null 2>&1; then
  log "‚ùå" "kubectl n√£o encontrado."
  exit 1
fi

NAMESPACE=${NAMESPACE:-"matverse-$ENVIRONMENT"}

log "üì¶" "Listando deployments no namespace $NAMESPACE..."
if ! kubectl get deployments -n "$NAMESPACE"; then
  log "‚ùå" "N√£o foi poss√≠vel listar deployments."
  exit 1
fi

log "üåê" "Verificando ingressos/servi√ßos principais..."
SERVICES=(
  "symbios"
  "explore"
  "cog-ui"
)
for svc in "${SERVICES[@]}"; do
  if kubectl get service "$svc" -n "$NAMESPACE" >/dev/null 2>&1; then
    log "‚úÖ" "Servi√ßo $svc dispon√≠vel."
  else
    log "‚ö†Ô∏è" "Servi√ßo $svc n√£o encontrado."
  fi
  if kubectl get ingress "$svc" -n "$NAMESPACE" >/dev/null 2>&1; then
    log "‚úÖ" "Ingress $svc dispon√≠vel."
  else
    log "‚ö†Ô∏è" "Ingress $svc n√£o encontrado."
  fi

done

log "ü©∫" "Executando verifica√ß√£o de pods..."
if ! kubectl get pods -n "$NAMESPACE"; then
  log "‚ùå" "N√£o foi poss√≠vel listar pods."
  exit 1
fi

log "‚úÖ" "Verifica√ß√£o de deploy conclu√≠da."

