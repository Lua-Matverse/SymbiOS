name: Deploy
on:
  workflow_dispatch:
  push:
    branches: ["main"]

concurrency:
  group: deploy-symbios
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  ship:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://${{ secrets.DOMAIN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node for frontend build
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Build frontend (Vite)
        working-directory: frontend
        run: |
          npm ci || npm i
          npm run build
          test -f dist/index.html || (echo "dist/index.html não gerado" && exit 1)

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run backend tests
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          pytest

      - name: Preflight secrets
        run: |
          [ -z "${{ secrets.SSH_HOST }}" ] && echo "❌ Missing secret: SSH_HOST" && exit 1
          [ -z "${{ secrets.SSH_USER }}" ] && echo "❌ Missing secret: SSH_USER" && exit 1
          [ -z "${{ secrets.SSH_KEY }}" ] && echo "❌ Missing secret: SSH_KEY" && exit 1
          [ -z "${{ secrets.DOMAIN }}" ] && echo "❌ Missing secret: DOMAIN" && exit 1
          [ -z "${{ secrets.MATVERSE_API_KEY }}" ] && echo "❌ Missing secret: MATVERSE_API_KEY" && exit 1
          [ -z "${{ secrets.GEMINI_API_KEY }}" ] && echo "❌ Missing secret: GEMINI_API_KEY" && exit 1
          echo "✅ All required secrets are set."

      - name: Prepare remote dir (home)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            mkdir -p ~/symbios

      - name: Upload files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "backend,frontend/dist,ops,*.md,*.txt"
          target: "~/symbios"
          strip_components: 0

      - name: Compose up (build & run)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            cd ~/symbios/ops
            cat > .env <<'EOF_ENV'
            MATVERSE_API_KEY=${{ secrets.MATVERSE_API_KEY }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            DOMAIN=${{ secrets.DOMAIN }}
            EMAIL=${{ secrets.EMAIL }}
            ADMIN_HASH=${{ secrets.ADMIN_HASH }}
            CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            EOF_ENV
            (docker compose version >/dev/null 2>&1) || echo "⚠️ docker compose não encontrado. Garanta Docker+Compose instalados."
            docker compose up -d --build --remove-orphans
            docker compose ps

      - name: Healthcheck
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            try_url () { curl -sk -o /dev/null -w "%{http_code}" "$1" || true; }
            for i in {1..20}; do
              https_code=$(try_url "https://${{ secrets.DOMAIN }}/health")
              http_code=$(try_url "http://${{ secrets.DOMAIN }}/health")
              local_code=$(try_url "http://localhost:8000/health")
              if [ "$https_code" = "200" ] || [ "$http_code" = "200" ] || [ "$local_code" = "200" ]; then
                echo "OK"; exit 0
              fi
              sleep 3
            done
            echo "Healthcheck falhou"; exit 1
